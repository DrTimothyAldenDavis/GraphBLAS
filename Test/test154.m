function test154(tasks)
%TEST154 test GrB_apply with scalar binding

% SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2024, All Rights Reserved.
% SPDX-License-Identifier: Apache-2.0

if (nargin < 1)
    tasks = [ ] ;
end

if (isempty (tasks))
    tasks = {
    {    'first',        'logical',  1, 1,-1, 1}, ... % ( 15,   15)
    {    'first',        'logical',  1, 4,-1, 1}, ... % (  2,   17)
    {    'first',        'logical',  4, 4, 0, 1}, ... % (  1,   18)
    {    'first',           'int8',  1, 1,-1, 1}, ... % (  1,   19)
    {    'first',          'int16',  1, 1,-1, 1}, ... % (  1,   20)
    {    'first',          'int32',  1, 1,-1, 1}, ... % (  1,   21)
    {    'first',          'int64',  1, 1,-1, 1}, ... % (  1,   22)
    {    'first',          'uint8',  1, 1,-1, 1}, ... % (  1,   23)
    {    'first',         'uint16',  1, 1,-1, 1}, ... % (  1,   24)
    {    'first',         'uint32',  1, 1,-1, 1}, ... % (  1,   25)
    {    'first',         'uint64',  1, 1,-1, 1}, ... % (  1,   26)
    {    'first',         'single',  1, 1,-1, 1}, ... % (  1,   27)
    {    'first',         'double',  1, 1,-1, 1}, ... % (  1,   28)
    {    'first', 'single complex',  1, 1,-1, 1}, ... % (  1,   29)
    {    'first', 'double complex',  1, 1,-1, 1}, ... % (  2,   31)
    {   'second',        'logical',  1, 4,-1, 1}, ... % (  1,   32)
    {   'second',        'logical',  4, 4, 0, 1}, ... % (  3,   35)
    {   'second',           'int8',  4, 4, 0, 1}, ... % (  2,   37)
    {   'second',          'int16',  4, 4, 0, 1}, ... % (  2,   39)
    {   'second',          'int32',  4, 4, 0, 1}, ... % (  2,   41)
    {   'second',          'uint8',  4, 4, 0, 1}, ... % (  2,   43)
    {   'second',         'uint16',  4, 4, 0, 1}, ... % (  2,   45)
    {   'second',         'uint32',  4, 4, 0, 1}, ... % (  2,   47)
    {   'second', 'single complex',  4, 4, 0, 1}, ... % (  2,   49)
    {     'pair',        'logical',  1, 1,-1, 1}, ... % (  1,   50)
    {     'plus',        'logical',  1, 1,-1, 1}, ... % (  8,   58)
    {     'plus',        'logical',  4, 4,-1, 1}, ... % (  5,   63)
    {     'plus',        'logical',  4, 4, 0, 1}, ... % (  2,   65)
    {     'plus',           'int8',  1, 1,-1, 1}, ... % (  3,   68)
    {     'plus',           'int8',  4, 4,-1, 1}, ... % (  1,   69)
    {     'plus',          'int16',  1, 1,-1, 1}, ... % (  6,   75)
    {     'plus',          'int16',  4, 4,-1, 1}, ... % (  3,   78)
    {     'plus',          'int32',  1, 1,-1, 1}, ... % (  3,   81)
    {     'plus',          'int32',  4, 4,-1, 1}, ... % (  1,   82)
    {     'plus',          'int64',  1, 1,-1, 1}, ... % (  3,   85)
    {     'plus',          'int64',  4, 4,-1, 1}, ... % (  1,   86)
    {     'plus',          'uint8',  1, 1,-1, 1}, ... % (  3,   89)
    {     'plus',          'uint8',  4, 4,-1, 1}, ... % (  1,   90)
    {     'plus',         'uint16',  1, 1,-1, 1}, ... % (  3,   93)
    {     'plus',         'uint16',  4, 4,-1, 1}, ... % (  1,   94)
    {     'plus',         'uint32',  1, 1,-1, 1}, ... % (  3,   97)
    {     'plus',         'uint32',  4, 4,-1, 1}, ... % (  1,   98)
    {     'plus',         'uint64',  1, 1,-1, 1}, ... % (  3,  101)
    {     'plus',         'uint64',  4, 4,-1, 1}, ... % (  1,  102)
    {     'plus',         'single',  1, 1,-1, 1}, ... % (  3,  105)
    {     'plus',         'single',  4, 4,-1, 1}, ... % (  1,  106)
    {     'plus',         'double',  1, 1,-1, 1}, ... % (  2,  108)
    {     'plus',         'double',  4, 4,-1, 1}, ... % (  1,  109)
    {     'plus', 'single complex',  1, 1,-1, 1}, ... % (  3,  112)
    {     'plus', 'single complex',  4, 4,-1, 1}, ... % (  1,  113)
    {     'plus', 'double complex',  1, 1,-1, 1}, ... % (  3,  116)
    {     'plus', 'double complex',  4, 4,-1, 1}, ... % (  1,  117)
    {    'minus',        'logical',  1, 1,-1, 1}, ... % (  3,  120)
    {    'minus',        'logical',  4, 4,-1, 1}, ... % (  1,  121)
    {    'minus',           'int8',  1, 1,-1, 1}, ... % (  3,  124)
    {    'minus',           'int8',  4, 4,-1, 1}, ... % (  1,  125)
    {    'minus',          'int16',  1, 1,-1, 1}, ... % (  3,  128)
    {    'minus',          'int16',  4, 4,-1, 1}, ... % (  1,  129)
    {    'minus',          'int32',  1, 1,-1, 1}, ... % (  3,  132)
    {    'minus',          'int32',  4, 4,-1, 1}, ... % (  1,  133)
    {    'minus',          'int64',  1, 1,-1, 1}, ... % (  3,  136)
    {    'minus',          'int64',  4, 4,-1, 1}, ... % (  1,  137)
    {    'minus',          'uint8',  1, 1,-1, 1}, ... % (  3,  140)
    {    'minus',          'uint8',  4, 4,-1, 1}, ... % (  1,  141)
    {    'minus',         'uint16',  1, 1,-1, 1}, ... % (  3,  144)
    {    'minus',         'uint16',  4, 4,-1, 1}, ... % (  1,  145)
    {    'minus',         'uint32',  1, 1,-1, 1}, ... % (  3,  148)
    {    'minus',         'uint32',  4, 4,-1, 1}, ... % (  1,  149)
    {    'minus',         'uint64',  1, 1,-1, 1}, ... % (  3,  152)
    {    'minus',         'uint64',  4, 4,-1, 1}, ... % (  1,  153)
    {    'minus',         'single',  1, 1,-1, 1}, ... % (  3,  156)
    {    'minus',         'single',  4, 4,-1, 1}, ... % (  1,  157)
    {    'minus',         'double',  1, 1,-1, 1}, ... % (  3,  160)
    {    'minus',         'double',  4, 4,-1, 1}, ... % (  1,  161)
    {    'minus', 'single complex',  1, 1,-1, 1}, ... % (  3,  164)
    {    'minus', 'single complex',  4, 4,-1, 1}, ... % (  1,  165)
    {    'minus', 'double complex',  1, 1,-1, 1}, ... % (  3,  168)
    {    'minus', 'double complex',  4, 4,-1, 1}, ... % (  1,  169)
    {   'rminus',           'int8',  1, 1,-1, 1}, ... % (  3,  172)
    {   'rminus',           'int8',  4, 4,-1, 1}, ... % (  1,  173)
    {   'rminus',          'int16',  1, 1,-1, 1}, ... % (  3,  176)
    {   'rminus',          'int16',  4, 4,-1, 1}, ... % (  1,  177)
    {   'rminus',          'int32',  1, 1,-1, 1}, ... % (  3,  180)
    {   'rminus',          'int32',  4, 4,-1, 1}, ... % (  1,  181)
    {   'rminus',          'int64',  1, 1,-1, 1}, ... % (  3,  184)
    {   'rminus',          'int64',  4, 4,-1, 1}, ... % (  1,  185)
    {   'rminus',          'uint8',  1, 1,-1, 1}, ... % (  3,  188)
    {   'rminus',          'uint8',  4, 4,-1, 1}, ... % (  1,  189)
    {   'rminus',         'uint16',  1, 1,-1, 1}, ... % (  3,  192)
    {   'rminus',         'uint16',  4, 4,-1, 1}, ... % (  1,  193)
    {   'rminus',         'uint32',  1, 1,-1, 1}, ... % (  3,  196)
    {   'rminus',         'uint32',  4, 4,-1, 1}, ... % (  1,  197)
    {   'rminus',         'uint64',  1, 1,-1, 1}, ... % (  3,  200)
    {   'rminus',         'uint64',  4, 4,-1, 1}, ... % (  1,  201)
    {   'rminus',         'single',  1, 1,-1, 1}, ... % (  3,  204)
    {   'rminus',         'single',  4, 4,-1, 1}, ... % (  1,  205)
    {   'rminus',         'double',  1, 1,-1, 1}, ... % (  3,  208)
    {   'rminus',         'double',  4, 4,-1, 1}, ... % (  1,  209)
    {   'rminus', 'single complex',  1, 1,-1, 1}, ... % (  3,  212)
    {   'rminus', 'single complex',  4, 4,-1, 1}, ... % (  1,  213)
    {   'rminus', 'double complex',  1, 1,-1, 1}, ... % (  3,  216)
    {   'rminus', 'double complex',  4, 4,-1, 1}, ... % (  1,  217)
    {    'times',        'logical',  1, 1,-1, 1}, ... % (  3,  220)
    {    'times',        'logical',  4, 4,-1, 1}, ... % (  1,  221)
    {    'times',           'int8',  1, 1,-1, 1}, ... % (  3,  224)
    {    'times',           'int8',  4, 4,-1, 1}, ... % (  1,  225)
    {    'times',          'int16',  1, 1,-1, 1}, ... % (  3,  228)
    {    'times',          'int16',  4, 4,-1, 1}, ... % (  1,  229)
    {    'times',          'int32',  1, 1,-1, 1}, ... % (  3,  232)
    {    'times',          'int32',  4, 4,-1, 1}, ... % (  1,  233)
    {    'times',          'int64',  1, 1,-1, 1}, ... % (  3,  236)
    {    'times',          'int64',  4, 4,-1, 1}, ... % (  1,  237)
    {    'times',          'uint8',  1, 1,-1, 1}, ... % (  3,  240)
    {    'times',          'uint8',  4, 4,-1, 1}, ... % (  1,  241)
    {    'times',         'uint16',  1, 1,-1, 1}, ... % (  3,  244)
    {    'times',         'uint16',  4, 4,-1, 1}, ... % (  1,  245)
    {    'times',         'uint32',  1, 1,-1, 1}, ... % (  3,  248)
    {    'times',         'uint32',  4, 4,-1, 1}, ... % (  1,  249)
    {    'times',         'uint64',  1, 1,-1, 1}, ... % (  3,  252)
    {    'times',         'uint64',  4, 4,-1, 1}, ... % (  1,  253)
    {    'times',         'single',  1, 1,-1, 1}, ... % (  3,  256)
    {    'times',         'single',  4, 4,-1, 1}, ... % (  1,  257)
    {    'times',         'double',  1, 1,-1, 1}, ... % (  3,  260)
    {    'times',         'double',  4, 4,-1, 1}, ... % (  1,  261)
    {    'times', 'single complex',  1, 1,-1, 1}, ... % (  3,  264)
    {    'times', 'single complex',  4, 4,-1, 1}, ... % (  1,  265)
    {    'times', 'double complex',  1, 1,-1, 1}, ... % (  3,  268)
    {    'times', 'double complex',  4, 4,-1, 1}, ... % (  1,  269)
    {      'div',           'int8',  1, 1,-1, 1}, ... % (  3,  272)
    {      'div',           'int8',  4, 4,-1, 1}, ... % (  1,  273)
    {      'div',          'int16',  1, 1,-1, 1}, ... % (  3,  276)
    {      'div',          'int16',  4, 4,-1, 1}, ... % (  1,  277)
    {      'div',          'int32',  1, 1,-1, 1}, ... % (  3,  280)
    {      'div',          'int32',  4, 4,-1, 1}, ... % (  1,  281)
    {      'div',          'int64',  1, 1,-1, 1}, ... % (  3,  284)
    {      'div',          'int64',  4, 4,-1, 1}, ... % (  1,  285)
    {      'div',          'uint8',  1, 1,-1, 1}, ... % (  3,  288)
    {      'div',          'uint8',  4, 4,-1, 1}, ... % (  1,  289)
    {      'div',         'uint16',  1, 1,-1, 1}, ... % (  3,  292)
    {      'div',         'uint16',  4, 4,-1, 1}, ... % (  1,  293)
    {      'div',         'uint32',  1, 1,-1, 1}, ... % (  3,  296)
    {      'div',         'uint32',  4, 4,-1, 1}, ... % (  1,  297)
    {      'div',         'uint64',  1, 1,-1, 1}, ... % (  3,  300)
    {      'div',         'uint64',  4, 4,-1, 1}, ... % (  1,  301)
    {      'div',         'single',  1, 1,-1, 1}, ... % (  3,  304)
    {      'div',         'single',  4, 4,-1, 1}, ... % (  1,  305)
    {      'div',         'double',  1, 1,-1, 1}, ... % (  3,  308)
    {      'div',         'double',  4, 4,-1, 1}, ... % (  1,  309)
    {      'div', 'single complex',  1, 1,-1, 1}, ... % (  3,  312)
    {      'div', 'single complex',  4, 4,-1, 1}, ... % (  1,  313)
    {      'div', 'double complex',  1, 1,-1, 1}, ... % (  3,  316)
    {      'div', 'double complex',  4, 4,-1, 1}, ... % (  1,  317)
    {     'rdiv',           'int8',  1, 1,-1, 1}, ... % (  3,  320)
    {     'rdiv',           'int8',  4, 4,-1, 1}, ... % (  1,  321)
    {     'rdiv',          'int16',  1, 1,-1, 1}, ... % (  3,  324)
    {     'rdiv',          'int16',  4, 4,-1, 1}, ... % (  1,  325)
    {     'rdiv',          'int32',  1, 1,-1, 1}, ... % (  3,  328)
    {     'rdiv',          'int32',  4, 4,-1, 1}, ... % (  1,  329)
    {     'rdiv',          'int64',  1, 1,-1, 1}, ... % (  3,  332)
    {     'rdiv',          'int64',  4, 4,-1, 1}, ... % (  1,  333)
    {     'rdiv',          'uint8',  1, 1,-1, 1}, ... % (  3,  336)
    {     'rdiv',          'uint8',  4, 4,-1, 1}, ... % (  1,  337)
    {     'rdiv',         'uint16',  1, 1,-1, 1}, ... % (  3,  340)
    {     'rdiv',         'uint16',  4, 4,-1, 1}, ... % (  1,  341)
    {     'rdiv',         'uint32',  1, 1,-1, 1}, ... % (  3,  344)
    {     'rdiv',         'uint32',  4, 4,-1, 1}, ... % (  1,  345)
    {     'rdiv',         'uint64',  1, 1,-1, 1}, ... % (  3,  348)
    {     'rdiv',         'uint64',  4, 4,-1, 1}, ... % (  1,  349)
    {     'rdiv',         'single',  1, 1,-1, 1}, ... % (  3,  352)
    {     'rdiv',         'single',  4, 4,-1, 1}, ... % (  1,  353)
    {     'rdiv',         'double',  1, 1,-1, 1}, ... % (  3,  356)
    {     'rdiv',         'double',  4, 4,-1, 1}, ... % (  1,  357)
    {     'rdiv', 'single complex',  1, 1,-1, 1}, ... % (  3,  360)
    {     'rdiv', 'single complex',  4, 4,-1, 1}, ... % (  1,  361)
    {     'rdiv', 'double complex',  1, 1,-1, 1}, ... % (  3,  364)
    {     'rdiv', 'double complex',  4, 4,-1, 1}, ... % (  1,  365)
    {     'iseq',        'logical',  1, 1,-1, 1}, ... % (  3,  368)
    {     'iseq',        'logical',  4, 4,-1, 1}, ... % (  1,  369)
    {     'iseq',           'int8',  1, 1,-1, 1}, ... % (  3,  372)
    {     'iseq',           'int8',  4, 4,-1, 1}, ... % (  1,  373)
    {     'iseq',          'int16',  1, 1,-1, 1}, ... % (  3,  376)
    {     'iseq',          'int16',  4, 4,-1, 1}, ... % (  1,  377)
    {     'iseq',          'int32',  1, 1,-1, 1}, ... % (  3,  380)
    {     'iseq',          'int32',  4, 4,-1, 1}, ... % (  1,  381)
    {     'iseq',          'int64',  1, 1,-1, 1}, ... % (  3,  384)
    {     'iseq',          'int64',  4, 4,-1, 1}, ... % (  1,  385)
    {     'iseq',          'uint8',  1, 1,-1, 1}, ... % (  3,  388)
    {     'iseq',          'uint8',  4, 4,-1, 1}, ... % (  1,  389)
    {     'iseq',         'uint16',  1, 1,-1, 1}, ... % (  3,  392)
    {     'iseq',         'uint16',  4, 4,-1, 1}, ... % (  1,  393)
    {     'iseq',         'uint32',  1, 1,-1, 1}, ... % (  3,  396)
    {     'iseq',         'uint32',  4, 4,-1, 1}, ... % (  1,  397)
    {     'iseq',         'uint64',  1, 1,-1, 1}, ... % (  3,  400)
    {     'iseq',         'uint64',  4, 4,-1, 1}, ... % (  1,  401)
    {     'iseq',         'single',  1, 1,-1, 1}, ... % (  3,  404)
    {     'iseq',         'single',  4, 4,-1, 1}, ... % (  1,  405)
    {     'iseq',         'double',  1, 1,-1, 1}, ... % (  3,  408)
    {     'iseq',         'double',  4, 4,-1, 1}, ... % (  1,  409)
    {     'iseq', 'single complex',  1, 1,-1, 1}, ... % (  3,  412)
    {     'iseq', 'single complex',  4, 4,-1, 1}, ... % (  1,  413)
    {     'iseq', 'double complex',  1, 1,-1, 1}, ... % (  3,  416)
    {     'iseq', 'double complex',  4, 4,-1, 1}, ... % (  1,  417)
    {     'isne',           'int8',  1, 1,-1, 1}, ... % (  3,  420)
    {     'isne',           'int8',  4, 4,-1, 1}, ... % (  1,  421)
    {     'isne',          'int16',  1, 1,-1, 1}, ... % (  3,  424)
    {     'isne',          'int16',  4, 4,-1, 1}, ... % (  1,  425)
    {     'isne',          'int32',  1, 1,-1, 1}, ... % (  3,  428)
    {     'isne',          'int32',  4, 4,-1, 1}, ... % (  1,  429)
    {     'isne',          'int64',  1, 1,-1, 1}, ... % (  3,  432)
    {     'isne',          'int64',  4, 4,-1, 1}, ... % (  1,  433)
    {     'isne',          'uint8',  1, 1,-1, 1}, ... % (  3,  436)
    {     'isne',          'uint8',  4, 4,-1, 1}, ... % (  1,  437)
    {     'isne',         'uint16',  1, 1,-1, 1}, ... % (  3,  440)
    {     'isne',         'uint16',  4, 4,-1, 1}, ... % (  1,  441)
    {     'isne',         'uint32',  1, 1,-1, 1}, ... % (  3,  444)
    {     'isne',         'uint32',  4, 4,-1, 1}, ... % (  1,  445)
    {     'isne',         'uint64',  1, 1,-1, 1}, ... % (  3,  448)
    {     'isne',         'uint64',  4, 4,-1, 1}, ... % (  1,  449)
    {     'isne',         'single',  1, 1,-1, 1}, ... % (  3,  452)
    {     'isne',         'single',  4, 4,-1, 1}, ... % (  1,  453)
    {     'isne',         'double',  1, 1,-1, 1}, ... % (  3,  456)
    {     'isne',         'double',  4, 4,-1, 1}, ... % (  1,  457)
    {     'isne', 'single complex',  1, 1,-1, 1}, ... % (  3,  460)
    {     'isne', 'single complex',  4, 4,-1, 1}, ... % (  1,  461)
    {     'isne', 'double complex',  1, 1,-1, 1}, ... % (  3,  464)
    {     'isne', 'double complex',  4, 4,-1, 1}, ... % (  1,  465)
    {       'eq',           'int8',  1, 1,-1, 1}, ... % (  3,  468)
    {       'eq',           'int8',  4, 4,-1, 1}, ... % (  1,  469)
    {       'eq',          'int16',  1, 1,-1, 1}, ... % (  3,  472)
    {       'eq',          'int16',  4, 4,-1, 1}, ... % (  1,  473)
    {       'eq',          'int32',  1, 1,-1, 1}, ... % (  3,  476)
    {       'eq',          'int32',  4, 4,-1, 1}, ... % (  1,  477)
    {       'eq',          'int64',  1, 1,-1, 1}, ... % (  3,  480)
    {       'eq',          'int64',  4, 4,-1, 1}, ... % (  1,  481)
    {       'eq',          'uint8',  1, 1,-1, 1}, ... % (  3,  484)
    {       'eq',          'uint8',  4, 4,-1, 1}, ... % (  1,  485)
    {       'eq',         'uint16',  1, 1,-1, 1}, ... % (  3,  488)
    {       'eq',         'uint16',  4, 4,-1, 1}, ... % (  1,  489)
    {       'eq',         'uint32',  1, 1,-1, 1}, ... % (  3,  492)
    {       'eq',         'uint32',  4, 4,-1, 1}, ... % (  1,  493)
    {       'eq',         'uint64',  1, 1,-1, 1}, ... % (  3,  496)
    {       'eq',         'uint64',  4, 4,-1, 1}, ... % (  1,  497)
    {       'eq',         'single',  1, 1,-1, 1}, ... % (  3,  500)
    {       'eq',         'single',  4, 4,-1, 1}, ... % (  1,  501)
    {       'eq',         'double',  1, 1,-1, 1}, ... % (  3,  504)
    {       'eq',         'double',  4, 4,-1, 1}, ... % (  1,  505)
    {       'eq', 'single complex',  1, 1,-1, 1}, ... % (  3,  508)
    {       'eq', 'single complex',  4, 4,-1, 1}, ... % (  1,  509)
    {       'eq', 'double complex',  1, 1,-1, 1}, ... % (  3,  512)
    {       'eq', 'double complex',  4, 4,-1, 1}, ... % (  1,  513)
    {       'ne',           'int8',  1, 1,-1, 1}, ... % (  3,  516)
    {       'ne',           'int8',  4, 4,-1, 1}, ... % (  1,  517)
    {       'ne',          'int16',  1, 1,-1, 1}, ... % (  3,  520)
    {       'ne',          'int16',  4, 4,-1, 1}, ... % (  1,  521)
    {       'ne',          'int32',  1, 1,-1, 1}, ... % (  3,  524)
    {       'ne',          'int32',  4, 4,-1, 1}, ... % (  1,  525)
    {       'ne',          'int64',  1, 1,-1, 1}, ... % (  3,  528)
    {       'ne',          'int64',  4, 4,-1, 1}, ... % (  1,  529)
    {       'ne',          'uint8',  1, 1,-1, 1}, ... % (  3,  532)
    {       'ne',          'uint8',  4, 4,-1, 1}, ... % (  1,  533)
    {       'ne',         'uint16',  1, 1,-1, 1}, ... % (  3,  536)
    {       'ne',         'uint16',  4, 4,-1, 1}, ... % (  1,  537)
    {       'ne',         'uint32',  1, 1,-1, 1}, ... % (  3,  540)
    {       'ne',         'uint32',  4, 4,-1, 1}, ... % (  1,  541)
    {       'ne',         'uint64',  1, 1,-1, 1}, ... % (  3,  544)
    {       'ne',         'uint64',  4, 4,-1, 1}, ... % (  1,  545)
    {       'ne',         'single',  1, 1,-1, 1}, ... % (  3,  548)
    {       'ne',         'single',  4, 4,-1, 1}, ... % (  1,  549)
    {       'ne',         'double',  1, 1,-1, 1}, ... % (  3,  552)
    {       'ne',         'double',  4, 4,-1, 1}, ... % (  1,  553)
    {       'ne', 'single complex',  1, 1,-1, 1}, ... % (  3,  556)
    {       'ne', 'single complex',  4, 4,-1, 1}, ... % (  1,  557)
    {       'ne', 'double complex',  1, 1,-1, 1}, ... % (  3,  560)
    {       'ne', 'double complex',  4, 4,-1, 1}, ... % (  1,  561)
    {      'pow',        'logical',  1, 1,-1, 1}, ... % (  3,  564)
    {      'pow',        'logical',  4, 4,-1, 1}, ... % (  1,  565)
    {      'pow',           'int8',  1, 1,-1, 1}, ... % (  3,  568)
    {      'pow',           'int8',  4, 4,-1, 1}, ... % (  1,  569)
    {      'pow',          'int16',  1, 1,-1, 1}, ... % (  3,  572)
    {      'pow',          'int16',  4, 4,-1, 1}, ... % (  1,  573)
    {      'pow',          'int32',  1, 1,-1, 1}, ... % (  3,  576)
    {      'pow',          'int32',  4, 4,-1, 1}, ... % (  1,  577)
    {      'pow',          'int64',  1, 1,-1, 1}, ... % (  3,  580)
    {      'pow',          'int64',  4, 4,-1, 1}, ... % (  1,  581)
    {      'pow',          'uint8',  1, 1,-1, 1}, ... % (  3,  584)
    {      'pow',          'uint8',  4, 4,-1, 1}, ... % (  1,  585)
    {      'pow',         'uint16',  1, 1,-1, 1}, ... % (  3,  588)
    {      'pow',         'uint16',  4, 4,-1, 1}, ... % (  1,  589)
    {      'pow',         'uint32',  1, 1,-1, 1}, ... % (  3,  592)
    {      'pow',         'uint32',  4, 4,-1, 1}, ... % (  1,  593)
    {      'pow',         'uint64',  1, 1,-1, 1}, ... % (  3,  596)
    {      'pow',         'uint64',  4, 4,-1, 1}, ... % (  1,  597)
    {      'pow',         'single',  1, 1,-1, 1}, ... % (  3,  600)
    {      'pow',         'single',  4, 4,-1, 1}, ... % (  1,  601)
    {      'pow',         'double',  1, 1,-1, 1}, ... % (  3,  604)
    {      'pow',         'double',  4, 4,-1, 1}, ... % (  1,  605)
    {      'pow', 'single complex',  1, 1,-1, 1}, ... % (  3,  608)
    {      'pow', 'single complex',  4, 4,-1, 1}, ... % (  1,  609)
    {      'pow', 'double complex',  1, 1,-1, 1}, ... % (  3,  612)
    {      'pow', 'double complex',  4, 4,-1, 1}, ... % (  1,  613)
    {      'min',           'int8',  1, 1,-1, 1}, ... % (  3,  616)
    {      'min',           'int8',  4, 4,-1, 1}, ... % (  1,  617)
    {      'min',          'int16',  1, 1,-1, 1}, ... % (  3,  620)
    {      'min',          'int16',  4, 4,-1, 1}, ... % (  1,  621)
    {      'min',          'int32',  1, 1,-1, 1}, ... % (  3,  624)
    {      'min',          'int32',  4, 4,-1, 1}, ... % (  1,  625)
    {      'min',          'int64',  1, 1,-1, 1}, ... % (  3,  628)
    {      'min',          'int64',  4, 4,-1, 1}, ... % (  1,  629)
    {      'min',          'uint8',  1, 1,-1, 1}, ... % (  3,  632)
    {      'min',          'uint8',  4, 4,-1, 1}, ... % (  1,  633)
    {      'min',         'uint16',  1, 1,-1, 1}, ... % (  3,  636)
    {      'min',         'uint16',  4, 4,-1, 1}, ... % (  1,  637)
    {      'min',         'uint32',  1, 1,-1, 1}, ... % (  3,  640)
    {      'min',         'uint32',  4, 4,-1, 1}, ... % (  1,  641)
    {      'min',         'uint64',  1, 1,-1, 1}, ... % (  3,  644)
    {      'min',         'uint64',  4, 4,-1, 1}, ... % (  1,  645)
    {      'min',         'single',  1, 1,-1, 1}, ... % (  3,  648)
    {      'min',         'single',  4, 4,-1, 1}, ... % (  1,  649)
    {      'min',         'double',  1, 1,-1, 1}, ... % (  3,  652)
    {      'min',         'double',  4, 4,-1, 1}, ... % (  1,  653)
    {      'max',           'int8',  1, 1,-1, 1}, ... % (  3,  656)
    {      'max',           'int8',  4, 4,-1, 1}, ... % (  1,  657)
    {      'max',          'int16',  1, 1,-1, 1}, ... % (  3,  660)
    {      'max',          'int16',  4, 4,-1, 1}, ... % (  1,  661)
    {      'max',          'int32',  1, 1,-1, 1}, ... % (  3,  664)
    {      'max',          'int32',  4, 4,-1, 1}, ... % (  1,  665)
    {      'max',          'int64',  1, 1,-1, 1}, ... % (  3,  668)
    {      'max',          'int64',  4, 4,-1, 1}, ... % (  1,  669)
    {      'max',          'uint8',  1, 1,-1, 1}, ... % (  3,  672)
    {      'max',          'uint8',  4, 4,-1, 1}, ... % (  1,  673)
    {      'max',         'uint16',  1, 1,-1, 1}, ... % (  3,  676)
    {      'max',         'uint16',  4, 4,-1, 1}, ... % (  1,  677)
    {      'max',         'uint32',  1, 1,-1, 1}, ... % (  3,  680)
    {      'max',         'uint32',  4, 4,-1, 1}, ... % (  1,  681)
    {      'max',         'uint64',  1, 1,-1, 1}, ... % (  3,  684)
    {      'max',         'uint64',  4, 4,-1, 1}, ... % (  1,  685)
    {      'max',         'single',  1, 1,-1, 1}, ... % (  3,  688)
    {      'max',         'single',  4, 4,-1, 1}, ... % (  1,  689)
    {      'max',         'double',  1, 1,-1, 1}, ... % (  3,  692)
    {      'max',         'double',  4, 4,-1, 1}, ... % (  1,  693)
    {     'isgt',        'logical',  1, 1,-1, 1}, ... % (  3,  696)
    {     'isgt',        'logical',  4, 4,-1, 1}, ... % (  1,  697)
    {     'isgt',           'int8',  1, 1,-1, 1}, ... % (  3,  700)
    {     'isgt',           'int8',  4, 4,-1, 1}, ... % (  1,  701)
    {     'isgt',          'int16',  1, 1,-1, 1}, ... % (  3,  704)
    {     'isgt',          'int16',  4, 4,-1, 1}, ... % (  1,  705)
    {     'isgt',          'int32',  1, 1,-1, 1}, ... % (  3,  708)
    {     'isgt',          'int32',  4, 4,-1, 1}, ... % (  1,  709)
    {     'isgt',          'int64',  1, 1,-1, 1}, ... % (  3,  712)
    {     'isgt',          'int64',  4, 4,-1, 1}, ... % (  1,  713)
    {     'isgt',          'uint8',  1, 1,-1, 1}, ... % (  3,  716)
    {     'isgt',          'uint8',  4, 4,-1, 1}, ... % (  1,  717)
    {     'isgt',         'uint16',  1, 1,-1, 1}, ... % (  3,  720)
    {     'isgt',         'uint16',  4, 4,-1, 1}, ... % (  1,  721)
    {     'isgt',         'uint32',  1, 1,-1, 1}, ... % (  3,  724)
    {     'isgt',         'uint32',  4, 4,-1, 1}, ... % (  1,  725)
    {     'isgt',         'uint64',  1, 1,-1, 1}, ... % (  3,  728)
    {     'isgt',         'uint64',  4, 4,-1, 1}, ... % (  1,  729)
    {     'isgt',         'single',  1, 1,-1, 1}, ... % (  3,  732)
    {     'isgt',         'single',  4, 4,-1, 1}, ... % (  1,  733)
    {     'isgt',         'double',  1, 1,-1, 1}, ... % (  3,  736)
    {     'isgt',         'double',  4, 4,-1, 1}, ... % (  1,  737)
    {     'islt',        'logical',  1, 1,-1, 1}, ... % (  3,  740)
    {     'islt',        'logical',  4, 4,-1, 1}, ... % (  1,  741)
    {     'islt',           'int8',  1, 1,-1, 1}, ... % (  3,  744)
    {     'islt',           'int8',  4, 4,-1, 1}, ... % (  1,  745)
    {     'islt',          'int16',  1, 1,-1, 1}, ... % (  3,  748)
    {     'islt',          'int16',  4, 4,-1, 1}, ... % (  1,  749)
    {     'islt',          'int32',  1, 1,-1, 1}, ... % (  3,  752)
    {     'islt',          'int32',  4, 4,-1, 1}, ... % (  1,  753)
    {     'islt',          'int64',  1, 1,-1, 1}, ... % (  3,  756)
    {     'islt',          'int64',  4, 4,-1, 1}, ... % (  1,  757)
    {     'islt',          'uint8',  1, 1,-1, 1}, ... % (  3,  760)
    {     'islt',          'uint8',  4, 4,-1, 1}, ... % (  1,  761)
    {     'islt',         'uint16',  1, 1,-1, 1}, ... % (  3,  764)
    {     'islt',         'uint16',  4, 4,-1, 1}, ... % (  1,  765)
    {     'islt',         'uint32',  1, 1,-1, 1}, ... % (  3,  768)
    {     'islt',         'uint32',  4, 4,-1, 1}, ... % (  1,  769)
    {     'islt',         'uint64',  1, 1,-1, 1}, ... % (  3,  772)
    {     'islt',         'uint64',  4, 4,-1, 1}, ... % (  1,  773)
    {     'islt',         'single',  1, 1,-1, 1}, ... % (  3,  776)
    {     'islt',         'single',  4, 4,-1, 1}, ... % (  1,  777)
    {     'islt',         'double',  1, 1,-1, 1}, ... % (  3,  780)
    {     'islt',         'double',  4, 4,-1, 1}, ... % (  1,  781)
    {     'isge',           'int8',  1, 1,-1, 1}, ... % (  3,  784)
    {     'isge',           'int8',  4, 4,-1, 1}, ... % (  1,  785)
    {     'isge',          'int16',  1, 1,-1, 1}, ... % (  3,  788)
    {     'isge',          'int16',  4, 4,-1, 1}, ... % (  1,  789)
    {     'isge',          'int32',  1, 1,-1, 1}, ... % (  3,  792)
    {     'isge',          'int32',  4, 4,-1, 1}, ... % (  1,  793)
    {     'isge',          'int64',  1, 1,-1, 1}, ... % (  3,  796)
    {     'isge',          'int64',  4, 4,-1, 1}, ... % (  1,  797)
    {     'isge',          'uint8',  1, 1,-1, 1}, ... % (  3,  800)
    {     'isge',          'uint8',  4, 4,-1, 1}, ... % (  1,  801)
    {     'isge',         'uint16',  1, 1,-1, 1}, ... % (  3,  804)
    {     'isge',         'uint16',  4, 4,-1, 1}, ... % (  1,  805)
    {     'isge',         'uint32',  1, 1,-1, 1}, ... % (  3,  808)
    {     'isge',         'uint32',  4, 4,-1, 1}, ... % (  1,  809)
    {     'isge',         'uint64',  1, 1,-1, 1}, ... % (  3,  812)
    {     'isge',         'uint64',  4, 4,-1, 1}, ... % (  1,  813)
    {     'isge',         'single',  1, 1,-1, 1}, ... % (  3,  816)
    {     'isge',         'single',  4, 4,-1, 1}, ... % (  1,  817)
    {     'isge',         'double',  1, 1,-1, 1}, ... % (  3,  820)
    {     'isge',         'double',  4, 4,-1, 1}, ... % (  1,  821)
    {     'isle',        'logical',  1, 1,-1, 1}, ... % (  3,  824)
    {     'isle',        'logical',  4, 4,-1, 1}, ... % (  1,  825)
    {     'isle',           'int8',  1, 1,-1, 1}, ... % (  3,  828)
    {     'isle',           'int8',  4, 4,-1, 1}, ... % (  1,  829)
    {     'isle',          'int16',  1, 1,-1, 1}, ... % (  3,  832)
    {     'isle',          'int16',  4, 4,-1, 1}, ... % (  1,  833)
    {     'isle',          'int32',  1, 1,-1, 1}, ... % (  3,  836)
    {     'isle',          'int32',  4, 4,-1, 1}, ... % (  1,  837)
    {     'isle',          'int64',  1, 1,-1, 1}, ... % (  3,  840)
    {     'isle',          'int64',  4, 4,-1, 1}, ... % (  1,  841)
    {     'isle',          'uint8',  1, 1,-1, 1}, ... % (  3,  844)
    {     'isle',          'uint8',  4, 4,-1, 1}, ... % (  1,  845)
    {     'isle',         'uint16',  1, 1,-1, 1}, ... % (  3,  848)
    {     'isle',         'uint16',  4, 4,-1, 1}, ... % (  1,  849)
    {     'isle',         'uint32',  1, 1,-1, 1}, ... % (  3,  852)
    {     'isle',         'uint32',  4, 4,-1, 1}, ... % (  1,  853)
    {     'isle',         'uint64',  1, 1,-1, 1}, ... % (  3,  856)
    {     'isle',         'uint64',  4, 4,-1, 1}, ... % (  1,  857)
    {     'isle',         'single',  1, 1,-1, 1}, ... % (  3,  860)
    {     'isle',         'single',  4, 4,-1, 1}, ... % (  1,  861)
    {     'isle',         'double',  1, 1,-1, 1}, ... % (  3,  864)
    {     'isle',         'double',  4, 4,-1, 1}, ... % (  1,  865)
    {       'gt',           'int8',  1, 1,-1, 1}, ... % (  3,  868)
    {       'gt',           'int8',  4, 4,-1, 1}, ... % (  1,  869)
    {       'gt',          'int16',  1, 1,-1, 1}, ... % (  3,  872)
    {       'gt',          'int16',  4, 4,-1, 1}, ... % (  1,  873)
    {       'gt',          'int32',  1, 1,-1, 1}, ... % (  3,  876)
    {       'gt',          'int32',  4, 4,-1, 1}, ... % (  1,  877)
    {       'gt',          'int64',  1, 1,-1, 1}, ... % (  3,  880)
    {       'gt',          'int64',  4, 4,-1, 1}, ... % (  1,  881)
    {       'gt',          'uint8',  1, 1,-1, 1}, ... % (  3,  884)
    {       'gt',          'uint8',  4, 4,-1, 1}, ... % (  1,  885)
    {       'gt',         'uint16',  1, 1,-1, 1}, ... % (  3,  888)
    {       'gt',         'uint16',  4, 4,-1, 1}, ... % (  1,  889)
    {       'gt',         'uint32',  1, 1,-1, 1}, ... % (  3,  892)
    {       'gt',         'uint32',  4, 4,-1, 1}, ... % (  1,  893)
    {       'gt',         'uint64',  1, 1,-1, 1}, ... % (  3,  896)
    {       'gt',         'uint64',  4, 4,-1, 1}, ... % (  1,  897)
    {       'gt',         'single',  1, 1,-1, 1}, ... % (  3,  900)
    {       'gt',         'single',  4, 4,-1, 1}, ... % (  1,  901)
    {       'gt',         'double',  1, 1,-1, 1}, ... % (  3,  904)
    {       'gt',         'double',  4, 4,-1, 1}, ... % (  1,  905)
    {       'lt',           'int8',  1, 1,-1, 1}, ... % (  3,  908)
    {       'lt',           'int8',  4, 4,-1, 1}, ... % (  1,  909)
    {       'lt',          'int16',  1, 1,-1, 1}, ... % (  3,  912)
    {       'lt',          'int16',  4, 4,-1, 1}, ... % (  1,  913)
    {       'lt',          'int32',  1, 1,-1, 1}, ... % (  3,  916)
    {       'lt',          'int32',  4, 4,-1, 1}, ... % (  1,  917)
    {       'lt',          'int64',  1, 1,-1, 1}, ... % (  3,  920)
    {       'lt',          'int64',  4, 4,-1, 1}, ... % (  1,  921)
    {       'lt',          'uint8',  1, 1,-1, 1}, ... % (  3,  924)
    {       'lt',          'uint8',  4, 4,-1, 1}, ... % (  1,  925)
    {       'lt',         'uint16',  1, 1,-1, 1}, ... % (  3,  928)
    {       'lt',         'uint16',  4, 4,-1, 1}, ... % (  1,  929)
    {       'lt',         'uint32',  1, 1,-1, 1}, ... % (  3,  932)
    {       'lt',         'uint32',  4, 4,-1, 1}, ... % (  1,  933)
    {       'lt',         'uint64',  1, 1,-1, 1}, ... % (  3,  936)
    {       'lt',         'uint64',  4, 4,-1, 1}, ... % (  1,  937)
    {       'lt',         'single',  1, 1,-1, 1}, ... % (  3,  940)
    {       'lt',         'single',  4, 4,-1, 1}, ... % (  1,  941)
    {       'lt',         'double',  1, 1,-1, 1}, ... % (  3,  944)
    {       'lt',         'double',  4, 4,-1, 1}, ... % (  1,  945)
    {       'ge',           'int8',  1, 1,-1, 1}, ... % (  3,  948)
    {       'ge',           'int8',  4, 4,-1, 1}, ... % (  1,  949)
    {       'ge',          'int16',  1, 1,-1, 1}, ... % (  3,  952)
    {       'ge',          'int16',  4, 4,-1, 1}, ... % (  1,  953)
    {       'ge',          'int32',  1, 1,-1, 1}, ... % (  3,  956)
    {       'ge',          'int32',  4, 4,-1, 1}, ... % (  1,  957)
    {       'ge',          'int64',  1, 1,-1, 1}, ... % (  3,  960)
    {       'ge',          'int64',  4, 4,-1, 1}, ... % (  1,  961)
    {       'ge',          'uint8',  1, 1,-1, 1}, ... % (  3,  964)
    {       'ge',          'uint8',  4, 4,-1, 1}, ... % (  1,  965)
    {       'ge',         'uint16',  1, 1,-1, 1}, ... % (  3,  968)
    {       'ge',         'uint16',  4, 4,-1, 1}, ... % (  1,  969)
    {       'ge',         'uint32',  1, 1,-1, 1}, ... % (  3,  972)
    {       'ge',         'uint32',  4, 4,-1, 1}, ... % (  1,  973)
    {       'ge',         'uint64',  1, 1,-1, 1}, ... % (  3,  976)
    {       'ge',         'uint64',  4, 4,-1, 1}, ... % (  1,  977)
    {       'ge',         'single',  1, 1,-1, 1}, ... % (  3,  980)
    {       'ge',         'single',  4, 4,-1, 1}, ... % (  1,  981)
    {       'ge',         'double',  1, 1,-1, 1}, ... % (  3,  984)
    {       'ge',         'double',  4, 4,-1, 1}, ... % (  1,  985)
    {       'le',           'int8',  1, 1,-1, 1}, ... % (  3,  988)
    {       'le',           'int8',  4, 4,-1, 1}, ... % (  1,  989)
    {       'le',          'int16',  1, 1,-1, 1}, ... % (  3,  992)
    {       'le',          'int16',  4, 4,-1, 1}, ... % (  1,  993)
    {       'le',          'int32',  1, 1,-1, 1}, ... % (  3,  996)
    {       'le',          'int32',  4, 4,-1, 1}, ... % (  1,  997)
    {       'le',          'int64',  1, 1,-1, 1}, ... % (  3, 1000)
    {       'le',          'int64',  4, 4,-1, 1}, ... % (  1, 1001)
    {       'le',          'uint8',  1, 1,-1, 1}, ... % (  3, 1004)
    {       'le',          'uint8',  4, 4,-1, 1}, ... % (  1, 1005)
    {       'le',         'uint16',  1, 1,-1, 1}, ... % (  3, 1008)
    {       'le',         'uint16',  4, 4,-1, 1}, ... % (  1, 1009)
    {       'le',         'uint32',  1, 1,-1, 1}, ... % (  3, 1012)
    {       'le',         'uint32',  4, 4,-1, 1}, ... % (  1, 1013)
    {       'le',         'uint64',  1, 1,-1, 1}, ... % (  3, 1016)
    {       'le',         'uint64',  4, 4,-1, 1}, ... % (  1, 1017)
    {       'le',         'single',  1, 1,-1, 1}, ... % (  3, 1020)
    {       'le',         'single',  4, 4,-1, 1}, ... % (  1, 1021)
    {       'le',         'double',  1, 1,-1, 1}, ... % (  3, 1024)
    {       'le',         'double',  4, 4,-1, 1}, ... % (  1, 1025)
    {       'or',           'int8',  1, 1,-1, 1}, ... % (  3, 1028)
    {       'or',           'int8',  4, 4,-1, 1}, ... % (  1, 1029)
    {       'or',          'int16',  1, 1,-1, 1}, ... % (  3, 1032)
    {       'or',          'int16',  4, 4,-1, 1}, ... % (  1, 1033)
    {       'or',          'int32',  1, 1,-1, 1}, ... % (  3, 1036)
    {       'or',          'int32',  4, 4,-1, 1}, ... % (  1, 1037)
    {       'or',          'int64',  1, 1,-1, 1}, ... % (  3, 1040)
    {       'or',          'int64',  4, 4,-1, 1}, ... % (  1, 1041)
    {       'or',          'uint8',  1, 1,-1, 1}, ... % (  3, 1044)
    {       'or',          'uint8',  4, 4,-1, 1}, ... % (  1, 1045)
    {       'or',         'uint16',  1, 1,-1, 1}, ... % (  3, 1048)
    {       'or',         'uint16',  4, 4,-1, 1}, ... % (  1, 1049)
    {       'or',         'uint32',  1, 1,-1, 1}, ... % (  3, 1052)
    {       'or',         'uint32',  4, 4,-1, 1}, ... % (  1, 1053)
    {       'or',         'uint64',  1, 1,-1, 1}, ... % (  3, 1056)
    {       'or',         'uint64',  4, 4,-1, 1}, ... % (  1, 1057)
    {       'or',         'single',  1, 1,-1, 1}, ... % (  3, 1060)
    {       'or',         'single',  4, 4,-1, 1}, ... % (  1, 1061)
    {       'or',         'double',  1, 1,-1, 1}, ... % (  3, 1064)
    {       'or',         'double',  4, 4,-1, 1}, ... % (  1, 1065)
    {      'and',           'int8',  1, 1,-1, 1}, ... % (  3, 1068)
    {      'and',           'int8',  4, 4,-1, 1}, ... % (  1, 1069)
    {      'and',          'int16',  1, 1,-1, 1}, ... % (  3, 1072)
    {      'and',          'int16',  4, 4,-1, 1}, ... % (  1, 1073)
    {      'and',          'int32',  1, 1,-1, 1}, ... % (  3, 1076)
    {      'and',          'int32',  4, 4,-1, 1}, ... % (  1, 1077)
    {      'and',          'int64',  1, 1,-1, 1}, ... % (  3, 1080)
    {      'and',          'int64',  4, 4,-1, 1}, ... % (  1, 1081)
    {      'and',          'uint8',  1, 1,-1, 1}, ... % (  3, 1084)
    {      'and',          'uint8',  4, 4,-1, 1}, ... % (  1, 1085)
    {      'and',         'uint16',  1, 1,-1, 1}, ... % (  3, 1088)
    {      'and',         'uint16',  4, 4,-1, 1}, ... % (  1, 1089)
    {      'and',         'uint32',  1, 1,-1, 1}, ... % (  3, 1092)
    {      'and',         'uint32',  4, 4,-1, 1}, ... % (  1, 1093)
    {      'and',         'uint64',  1, 1,-1, 1}, ... % (  3, 1096)
    {      'and',         'uint64',  4, 4,-1, 1}, ... % (  1, 1097)
    {      'and',         'single',  1, 1,-1, 1}, ... % (  3, 1100)
    {      'and',         'single',  4, 4,-1, 1}, ... % (  1, 1101)
    {      'and',         'double',  1, 1,-1, 1}, ... % (  3, 1104)
    {      'and',         'double',  4, 4,-1, 1}, ... % (  1, 1105)
    {      'xor',           'int8',  1, 1,-1, 1}, ... % (  3, 1108)
    {      'xor',           'int8',  4, 4,-1, 1}, ... % (  1, 1109)
    {      'xor',          'int16',  1, 1,-1, 1}, ... % (  3, 1112)
    {      'xor',          'int16',  4, 4,-1, 1}, ... % (  1, 1113)
    {      'xor',          'int32',  1, 1,-1, 1}, ... % (  3, 1116)
    {      'xor',          'int32',  4, 4,-1, 1}, ... % (  1, 1117)
    {      'xor',          'int64',  1, 1,-1, 1}, ... % (  3, 1120)
    {      'xor',          'int64',  4, 4,-1, 1}, ... % (  1, 1121)
    {      'xor',          'uint8',  1, 1,-1, 1}, ... % (  3, 1124)
    {      'xor',          'uint8',  4, 4,-1, 1}, ... % (  1, 1125)
    {      'xor',         'uint16',  1, 1,-1, 1}, ... % (  3, 1128)
    {      'xor',         'uint16',  4, 4,-1, 1}, ... % (  1, 1129)
    {      'xor',         'uint32',  1, 1,-1, 1}, ... % (  3, 1132)
    {      'xor',         'uint32',  4, 4,-1, 1}, ... % (  1, 1133)
    {      'xor',         'uint64',  1, 1,-1, 1}, ... % (  3, 1136)
    {      'xor',         'uint64',  4, 4,-1, 1}, ... % (  1, 1137)
    {      'xor',         'single',  1, 1,-1, 1}, ... % (  3, 1140)
    {      'xor',         'single',  4, 4,-1, 1}, ... % (  1, 1141)
    {      'xor',         'double',  1, 1,-1, 1}, ... % (  3, 1144)
    {      'xor',         'double',  4, 4,-1, 1}, ... % (  1, 1145)
    {      'bor',           'int8',  1, 1,-1, 1}, ... % (  3, 1148)
    {      'bor',           'int8',  4, 4,-1, 1}, ... % (  1, 1149)
    {      'bor',          'int16',  1, 1,-1, 1}, ... % (  3, 1152)
    {      'bor',          'int16',  4, 4,-1, 1}, ... % (  1, 1153)
    {      'bor',          'int32',  1, 1,-1, 1}, ... % (  3, 1156)
    {      'bor',          'int32',  4, 4,-1, 1}, ... % (  1, 1157)
    {      'bor',          'int64',  1, 1,-1, 1}, ... % (  3, 1160)
    {      'bor',          'int64',  4, 4,-1, 1}, ... % (  1, 1161)
    {      'bor',          'uint8',  1, 1,-1, 1}, ... % (  3, 1164)
    {      'bor',          'uint8',  4, 4,-1, 1}, ... % (  1, 1165)
    {      'bor',         'uint16',  1, 1,-1, 1}, ... % (  3, 1168)
    {      'bor',         'uint16',  4, 4,-1, 1}, ... % (  1, 1169)
    {      'bor',         'uint32',  1, 1,-1, 1}, ... % (  3, 1172)
    {      'bor',         'uint32',  4, 4,-1, 1}, ... % (  1, 1173)
    {      'bor',         'uint64',  1, 1,-1, 1}, ... % (  3, 1176)
    {      'bor',         'uint64',  4, 4,-1, 1}, ... % (  1, 1177)
    {     'band',           'int8',  1, 1,-1, 1}, ... % (  3, 1180)
    {     'band',           'int8',  4, 4,-1, 1}, ... % (  1, 1181)
    {     'band',          'int16',  1, 1,-1, 1}, ... % (  3, 1184)
    {     'band',          'int16',  4, 4,-1, 1}, ... % (  1, 1185)
    {     'band',          'int32',  1, 1,-1, 1}, ... % (  3, 1188)
    {     'band',          'int32',  4, 4,-1, 1}, ... % (  1, 1189)
    {     'band',          'int64',  1, 1,-1, 1}, ... % (  3, 1192)
    {     'band',          'int64',  4, 4,-1, 1}, ... % (  1, 1193)
    {     'band',          'uint8',  1, 1,-1, 1}, ... % (  3, 1196)
    {     'band',          'uint8',  4, 4,-1, 1}, ... % (  1, 1197)
    {     'band',         'uint16',  1, 1,-1, 1}, ... % (  3, 1200)
    {     'band',         'uint16',  4, 4,-1, 1}, ... % (  1, 1201)
    {     'band',         'uint32',  1, 1,-1, 1}, ... % (  3, 1204)
    {     'band',         'uint32',  4, 4,-1, 1}, ... % (  1, 1205)
    {     'band',         'uint64',  1, 1,-1, 1}, ... % (  3, 1208)
    {     'band',         'uint64',  4, 4,-1, 1}, ... % (  1, 1209)
    {     'bxor',           'int8',  1, 1,-1, 1}, ... % (  3, 1212)
    {     'bxor',           'int8',  4, 4,-1, 1}, ... % (  1, 1213)
    {     'bxor',          'int16',  1, 1,-1, 1}, ... % (  3, 1216)
    {     'bxor',          'int16',  4, 4,-1, 1}, ... % (  1, 1217)
    {     'bxor',          'int32',  1, 1,-1, 1}, ... % (  3, 1220)
    {     'bxor',          'int32',  4, 4,-1, 1}, ... % (  1, 1221)
    {     'bxor',          'int64',  1, 1,-1, 1}, ... % (  3, 1224)
    {     'bxor',          'int64',  4, 4,-1, 1}, ... % (  1, 1225)
    {     'bxor',          'uint8',  1, 1,-1, 1}, ... % (  3, 1228)
    {     'bxor',          'uint8',  4, 4,-1, 1}, ... % (  1, 1229)
    {     'bxor',         'uint16',  1, 1,-1, 1}, ... % (  3, 1232)
    {     'bxor',         'uint16',  4, 4,-1, 1}, ... % (  1, 1233)
    {     'bxor',         'uint32',  1, 1,-1, 1}, ... % (  3, 1236)
    {     'bxor',         'uint32',  4, 4,-1, 1}, ... % (  1, 1237)
    {     'bxor',         'uint64',  1, 1,-1, 1}, ... % (  3, 1240)
    {     'bxor',         'uint64',  4, 4,-1, 1}, ... % (  1, 1241)
    {    'bxnor',           'int8',  1, 1,-1, 1}, ... % (  3, 1244)
    {    'bxnor',           'int8',  4, 4,-1, 1}, ... % (  1, 1245)
    {    'bxnor',          'int16',  1, 1,-1, 1}, ... % (  3, 1248)
    {    'bxnor',          'int16',  4, 4,-1, 1}, ... % (  1, 1249)
    {    'bxnor',          'int32',  1, 1,-1, 1}, ... % (  3, 1252)
    {    'bxnor',          'int32',  4, 4,-1, 1}, ... % (  1, 1253)
    {    'bxnor',          'int64',  1, 1,-1, 1}, ... % (  3, 1256)
    {    'bxnor',          'int64',  4, 4,-1, 1}, ... % (  1, 1257)
    {    'bxnor',          'uint8',  1, 1,-1, 1}, ... % (  3, 1260)
    {    'bxnor',          'uint8',  4, 4,-1, 1}, ... % (  1, 1261)
    {    'bxnor',         'uint16',  1, 1,-1, 1}, ... % (  3, 1264)
    {    'bxnor',         'uint16',  4, 4,-1, 1}, ... % (  1, 1265)
    {    'bxnor',         'uint32',  1, 1,-1, 1}, ... % (  3, 1268)
    {    'bxnor',         'uint32',  4, 4,-1, 1}, ... % (  1, 1269)
    {    'bxnor',         'uint64',  1, 1,-1, 1}, ... % (  3, 1272)
    {    'bxnor',         'uint64',  4, 4,-1, 1}, ... % (  1, 1273)
    {     'bget',           'int8',  1, 1,-1, 1}, ... % (  3, 1276)
    {     'bget',           'int8',  4, 4,-1, 1}, ... % (  1, 1277)
    {     'bget',          'int16',  1, 1,-1, 1}, ... % (  3, 1280)
    {     'bget',          'int16',  4, 4,-1, 1}, ... % (  1, 1281)
    {     'bget',          'int32',  1, 1,-1, 1}, ... % (  3, 1284)
    {     'bget',          'int32',  4, 4,-1, 1}, ... % (  1, 1285)
    {     'bget',          'int64',  1, 1,-1, 1}, ... % (  3, 1288)
    {     'bget',          'int64',  4, 4,-1, 1}, ... % (  1, 1289)
    {     'bget',          'uint8',  1, 1,-1, 1}, ... % (  3, 1292)
    {     'bget',          'uint8',  4, 4,-1, 1}, ... % (  1, 1293)
    {     'bget',         'uint16',  1, 1,-1, 1}, ... % (  3, 1296)
    {     'bget',         'uint16',  4, 4,-1, 1}, ... % (  1, 1297)
    {     'bget',         'uint32',  1, 1,-1, 1}, ... % (  3, 1300)
    {     'bget',         'uint32',  4, 4,-1, 1}, ... % (  1, 1301)
    {     'bget',         'uint64',  1, 1,-1, 1}, ... % (  3, 1304)
    {     'bget',         'uint64',  4, 4,-1, 1}, ... % (  1, 1305)
    {     'bset',           'int8',  1, 1,-1, 1}, ... % (  3, 1308)
    {     'bset',           'int8',  4, 4,-1, 1}, ... % (  1, 1309)
    {     'bset',          'int16',  1, 1,-1, 1}, ... % (  3, 1312)
    {     'bset',          'int16',  4, 4,-1, 1}, ... % (  1, 1313)
    {     'bset',          'int32',  1, 1,-1, 1}, ... % (  3, 1316)
    {     'bset',          'int32',  4, 4,-1, 1}, ... % (  1, 1317)
    {     'bset',          'int64',  1, 1,-1, 1}, ... % (  3, 1320)
    {     'bset',          'int64',  4, 4,-1, 1}, ... % (  1, 1321)
    {     'bset',          'uint8',  1, 1,-1, 1}, ... % (  3, 1324)
    {     'bset',          'uint8',  4, 4,-1, 1}, ... % (  1, 1325)
    {     'bset',         'uint16',  1, 1,-1, 1}, ... % (  3, 1328)
    {     'bset',         'uint16',  4, 4,-1, 1}, ... % (  1, 1329)
    {     'bset',         'uint32',  1, 1,-1, 1}, ... % (  3, 1332)
    {     'bset',         'uint32',  4, 4,-1, 1}, ... % (  1, 1333)
    {     'bset',         'uint64',  1, 1,-1, 1}, ... % (  3, 1336)
    {     'bset',         'uint64',  4, 4,-1, 1}, ... % (  1, 1337)
    {     'bclr',           'int8',  1, 1,-1, 1}, ... % (  3, 1340)
    {     'bclr',           'int8',  4, 4,-1, 1}, ... % (  1, 1341)
    {     'bclr',          'int16',  1, 1,-1, 1}, ... % (  3, 1344)
    {     'bclr',          'int16',  4, 4,-1, 1}, ... % (  1, 1345)
    {     'bclr',          'int32',  1, 1,-1, 1}, ... % (  3, 1348)
    {     'bclr',          'int32',  4, 4,-1, 1}, ... % (  1, 1349)
    {     'bclr',          'int64',  1, 1,-1, 1}, ... % (  3, 1352)
    {     'bclr',          'int64',  4, 4,-1, 1}, ... % (  1, 1353)
    {     'bclr',          'uint8',  1, 1,-1, 1}, ... % (  3, 1356)
    {     'bclr',          'uint8',  4, 4,-1, 1}, ... % (  1, 1357)
    {     'bclr',         'uint16',  1, 1,-1, 1}, ... % (  3, 1360)
    {     'bclr',         'uint16',  4, 4,-1, 1}, ... % (  1, 1361)
    {     'bclr',         'uint32',  1, 1,-1, 1}, ... % (  3, 1364)
    {     'bclr',         'uint32',  4, 4,-1, 1}, ... % (  1, 1365)
    {     'bclr',         'uint64',  1, 1,-1, 1}, ... % (  3, 1368)
    {     'bclr',         'uint64',  4, 4,-1, 1}, ... % (  1, 1369)
    {   'bshift',           'int8',  1, 1,-1, 1}, ... % (  3, 1372)
    {   'bshift',           'int8',  4, 4,-1, 1}, ... % (  1, 1373)
    {   'bshift',          'int16',  1, 1,-1, 1}, ... % (  3, 1376)
    {   'bshift',          'int16',  4, 4,-1, 1}, ... % (  1, 1377)
    {   'bshift',          'int32',  1, 1,-1, 1}, ... % (  3, 1380)
    {   'bshift',          'int32',  4, 4,-1, 1}, ... % (  1, 1381)
    {   'bshift',          'int64',  1, 1,-1, 1}, ... % (  3, 1384)
    {   'bshift',          'int64',  4, 4,-1, 1}, ... % (  1, 1385)
    {   'bshift',          'uint8',  1, 1,-1, 1}, ... % (  3, 1388)
    {   'bshift',          'uint8',  4, 4,-1, 1}, ... % (  1, 1389)
    {   'bshift',         'uint16',  1, 1,-1, 1}, ... % (  3, 1392)
    {   'bshift',         'uint16',  4, 4,-1, 1}, ... % (  1, 1393)
    {   'bshift',         'uint32',  1, 1,-1, 1}, ... % (  3, 1396)
    {   'bshift',         'uint32',  4, 4,-1, 1}, ... % (  1, 1397)
    {   'bshift',         'uint64',  1, 1,-1, 1}, ... % (  3, 1400)
    {   'bshift',         'uint64',  4, 4,-1, 1}, ... % (  1, 1401)
    {    'atan2',         'single',  1, 1,-1, 1}, ... % (  3, 1404)
    {    'atan2',         'single',  4, 4,-1, 1}, ... % (  1, 1405)
    {    'atan2',         'double',  1, 1,-1, 1}, ... % (  3, 1408)
    {    'atan2',         'double',  4, 4,-1, 1}, ... % (  1, 1409)
    {    'hypot',         'single',  1, 1,-1, 1}, ... % (  3, 1412)
    {    'hypot',         'single',  4, 4,-1, 1}, ... % (  1, 1413)
    {    'hypot',         'double',  1, 1,-1, 1}, ... % (  3, 1416)
    {    'hypot',         'double',  4, 4,-1, 1}, ... % (  1, 1417)
    {     'fmod',         'single',  1, 1,-1, 1}, ... % (  3, 1420)
    {     'fmod',         'single',  4, 4,-1, 1}, ... % (  1, 1421)
    {     'fmod',         'double',  1, 1,-1, 1}, ... % (  3, 1424)
    {     'fmod',         'double',  4, 4,-1, 1}, ... % (  1, 1425)
    {'remainder',         'single',  1, 1,-1, 1}, ... % (  3, 1428)
    {'remainder',         'single',  4, 4,-1, 1}, ... % (  1, 1429)
    {'remainder',         'double',  1, 1,-1, 1}, ... % (  3, 1432)
    {'remainder',         'double',  4, 4,-1, 1}, ... % (  1, 1433)
    {    'ldexp',         'single',  1, 1,-1, 1}, ... % (  3, 1436)
    {    'ldexp',         'single',  4, 4,-1, 1}, ... % (  1, 1437)
    {    'ldexp',         'double',  1, 1,-1, 1}, ... % (  3, 1440)
    {    'ldexp',         'double',  4, 4,-1, 1}, ... % (  1, 1441)
    { 'copysign',         'single',  1, 1,-1, 1}, ... % (  3, 1444)
    { 'copysign',         'single',  4, 4,-1, 1}, ... % (  1, 1445)
    { 'copysign',         'double',  1, 1,-1, 1}, ... % (  3, 1448)
    { 'copysign',         'double',  4, 4,-1, 1}, ... % (  1, 1449)
    {    'cmplx',         'single',  1, 1,-1, 1}, ... % (  3, 1452)
    {    'cmplx',         'single',  4, 4,-1, 1}, ... % (  1, 1453)
    {    'cmplx',         'double',  1, 1,-1, 1}, ... % (  3, 1456)
    {    'cmplx',         'double',  4, 4,-1, 1}, ... % (  1, 1457)
    {   'firsti',          'int32',  1, 1,-1, 1}, ... % ( 21, 1478)
    {   'firsti',          'int64',  1, 1,-1, 1}, ... % (  6, 1484)
    {  'firsti1',          'int32',  1, 1,-1, 1}, ... % ( 11, 1495)
    {  'firsti1',          'int64',  1, 1,-1, 1}, ... % (  1, 1496)
    {   'firstj',          'int32',  1, 1,-1, 1}, ... % (  1, 1497)
    {   'firstj',          'int64',  1, 1,-1, 1}, ... % (  1, 1498)
    {  'firstj1',          'int32',  1, 1,-1, 1}, ... % (  1, 1499)
    {  'firstj1',          'int64',  1, 1,-1, 1}, ... % (  1, 1500)
    {  'secondi',          'int32',  1, 1,-1, 1}, ... % (  1, 1501)
    {  'secondi',          'int64',  1, 1,-1, 1}, ... % (  1, 1502)
    { 'secondi1',          'int32',  1, 1,-1, 1}, ... % (  1, 1503)
    { 'secondi1',          'int64',  1, 1,-1, 1}, ... % (  1, 1504)
    {  'secondj',          'int32',  1, 1,-1, 1}, ... % (  1, 1505)
    {  'secondj',          'int64',  1, 1,-1, 1}, ... % (  1, 1506)
    { 'secondj1',          'int32',  1, 1,-1, 1}, ... % (  1, 1507)
    { 'secondj1',          'int64',  1, 1,-1, 1}, ... % (  1, 1508)
    } ;
end

track_coverage = false ;
if (track_coverage)
    global GraphBLAS_debug GraphBLAS_grbcov GraphBLAS_grbcovs ...
        GraphBLAS_scripts GraphBLAS_times
    track_coverage = ~isempty (GraphBLAS_grbcov) ;
    clast = sum (GraphBLAS_grbcov > 0) ;
    cfirst = clast ;
    cstart = find (GraphBLAS_grbcov > 0) ;
end

fprintf ('\n--- testing apply with binaryop and scalar binding\n') ;
% the right approach for apply_bind1st and apply_bind2nd
desc0.inp0 = 'tran' ;
desc1.inp1 = 'tran' ;
% shotgun approach for eWiseMult
desc.inp0 = 'tran' ;
desc.inp1 = 'tran' ;

% create test matrices
rng ('default') ;
for m = [1 4]
    for n = [1 4]
        AA_matrices {m,n} = sprand (m, n, 0.8) ;
        AS_matrices {m,n} = sprand (m, n, 0.5) ;
        BB_matrices {m,n} = sprand (m, n, 0.8) ;
        BS_matrices {m,n} = sprand (m, n, 0.5) ;
        xx_matrix = sparse (rand (1)) ;
        xs_matrix = sparse (rand (1)) ;
        yy_matrix = sparse (rand (1)) ;
        ys_matrix = sparse (rand (1)) ;
    end
end

for kk = 1:length(tasks)
    task = tasks {kk} ;
    mulop = task {1} ;
    type = task {2} ;
    m = task {3} ;
    n = task {4} ;
    lo = task {5} ;
    hi = task {6} ;

    % create the op
    clear op
    op.opname = mulop ;
    op.optype = type ;

    try
        [oname ot ztype xtype ytype] = GB_spec_operator (op) ;
    catch
        continue ;
    end

    switch (mulop)
        case { 'pow' }
            xlimits = [0, 5] ;
            ylimits = [0, 5] ;
        case { 'ldexp' }
            xlimits = [-5, 5] ;
            ylimits = [-5, 5] ;
        otherwise
            xlimits = [ ] ;
            ylimits = [ ] ;
    end

    if (test_contains (type, 'single'))
        tol = 1e-5 ;
    elseif (test_contains (type, 'double'))
        tol = 1e-12 ;
    else
        tol = 0 ;
    end

    Amat = (hi*AA_matrices{m,n}-lo) .* AS_matrices{m,n} ;
    Bmat = (hi*BB_matrices{m,n}-lo) .* BS_matrices{m,n} ;
    xmat = (hi*xx_matrix-lo) .* xs_matrix ;
    ymat = (hi*yy_matrix-lo) .* ys_matrix ;

    Cmat = sparse (m, n) ;
    if (~isempty (xlimits))
        Amat = max (Amat, xlimits (1)) ;
        Amat = min (Amat, xlimits (2)) ;
        xmat = max (xmat, xlimits (1)) ;
        xmat = min (xmat, xlimits (2)) ;
    end
    if (xmat == 0)
        xmat = sparse (0.5) ;
    end

    if (~isempty (ylimits))
        Bmat = max (Bmat, ylimits (1)) ;
        Bmat = min (Bmat, ylimits (2)) ;
        ymat = max (ymat, ylimits (1)) ;
        ymat = min (ymat, ylimits (2)) ;
    end
    if (ymat == 0)
        ymat = sparse (0.5) ;
    end

    C.matrix = Cmat ;
    C.class = ztype ;

    CT.matrix = Cmat' ;
    CT.class = ztype ;

    A.matrix = Amat ;
    A.class = xtype ;

    B.matrix = Bmat ;
    B.class = ytype ;

    x.matrix = xmat ;
    x.class = xtype ;

    y.matrix = ymat ;
    y.class = ytype ;

    X.matrix = xmat .* spones (Bmat) ;
    X.class = xtype ;

    Y.matrix = ymat .* spones (Amat) ; 
    Y.class = ytype ;

    op_bind1 = op ;
    op_bind2 = op ;
    if (isequal (op.opname, 'any'))
        op_bind1.opname = 'first' ;
        op_bind2.opname = 'second' ;
    end

    C1 = GB_mex_apply1 (C, [ ], [ ], op, 0, x, B) ;
    C2 = GB_spec_Matrix_eWiseMult (C, [ ], [ ], op_bind1, X, B, [ ]) ;
    GB_spec_compare (C1, C2, 0, tol) ;
    C1 = GB_mex_apply1 (C, [ ], [ ], op, 1, x, B) ;
    GB_spec_compare (C1, C2, 0, tol) ;

    C1 = GB_mex_apply1 (CT, [ ], [ ], op, 0, x, B, desc1) ;
    C2 = GB_spec_Matrix_eWiseMult (CT, [ ], [ ], op_bind1, X, B, desc) ;
    GB_spec_compare (C1, C2, 0, tol) ;
    C1 = GB_mex_apply1 (CT, [ ], [ ], op, 1, x, B, desc1) ;
    GB_spec_compare (C1, C2, 0, tol) ;

    for csc = 0:1
        A.is_csc = csc ;
        C.is_csc = csc ;
        CT.is_csc = csc ;

        C1 = GB_mex_apply2 (C, [ ], [ ], op, 0, A, y) ;
        C2 = GB_spec_Matrix_eWiseMult (C, [ ], [ ], op_bind2, A, Y, [ ]) ;
        GB_spec_compare (C1, C2, 0, tol) ;
        C1 = GB_mex_apply2 (C, [ ], [ ], op, 1, A, y) ;
        GB_spec_compare (C1, C2, 0, tol) ;

        C1 = GB_mex_apply2 (CT, [ ], [ ], op, 0, A, y, desc0) ;
        C2 = GB_spec_Matrix_eWiseMult (CT, [ ], [ ], op_bind2, A, Y, desc) ;
        GB_spec_compare (C1, C2, 0, tol) ;
        C1 = GB_mex_apply2 (CT, [ ], [ ], op, 1, A, y, desc0) ;
        GB_spec_compare (C1, C2, 0, tol) ;
    end

    A.is_csc = 1 ;
    C.is_csc = 1 ;
    CT.is_csc = 1 ;

    y.class = 'double' ;
    Y.class = 'double' ;

    C1 = GB_mex_apply2 (C, [ ], [ ], op, 0, A, y) ;
    C2 = GB_spec_Matrix_eWiseMult (C, [ ], [ ], op_bind2, A, Y, [ ]) ;
    GB_spec_compare (C1, C2, 0, tol) ;

    C1 = GB_mex_apply2 (C, [ ], [ ], op, 1, A, y) ;
    GB_spec_compare (C1, C2, 0, tol) ;

    C1 = GB_mex_apply2 (CT, [ ], [ ], op, 0, A, y, desc0) ;
    C2 = GB_spec_Matrix_eWiseMult (CT, [ ], [ ], op_bind2, A, Y, desc) ;
    GB_spec_compare (C1, C2, 0, tol) ;
    C1 = GB_mex_apply2 (CT, [ ], [ ], op, 1, A, y, desc0) ;
    GB_spec_compare (C1, C2, 0, tol) ;

    if (track_coverage)
        c = sum (GraphBLAS_grbcov > 0) ;
        d = c - clast ;
        if (d > 0)
            mm = sprintf ('''%s''', mulop) ;
            tt = sprintf ('''%s''', type) ;
            fprintf (...
            '{%11s, %16s, %2d,%2d,%2d,%2d}, ... ', ...
            mm, tt, m, n, lo, hi) ;
            fprintf ('%% (%3d, %4d)\n', d, c - cfirst) ;
        end
        clast = c ;
    else
        fprintf ('.') ;
    end

end

fprintf ('\ntest154: all tests passed\n') ;

